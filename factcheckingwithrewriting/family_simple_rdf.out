Query:	?- hasSister('tom', 'pam').:
EvidencesPaths{[
Path{[
 Evidence{literal=gender('pam', 'female'), type=FACT}**
,Evidence{literal=gender('bob', 'male'), type=FACT}**
,Evidence{literal=hasParent('pam', 'bob'), type=FACT}**
,Evidence{literal=fatherOf('pam', 'bob'), type=RULE, rule=fatherOf(?x, ?y) :- hasParent(?x, ?y), gender(?y, 'male').}
,Evidence{literal=gender('bob', 'male'), type=FACT}**
,Evidence{literal=hasParent('tom', 'bob'), type=FACT}**
,Evidence{literal=fatherOf('tom', 'bob'), type=RULE, rule=fatherOf(?x, ?y) :- hasParent(?x, ?y), gender(?y, 'male').}
,Evidence{literal=fatherOf('tom', ?z), type=BIND(GREEDY), variableMap={?z='bob'}}
,Evidence{literal=hasSister('tom', 'pam'), type=RULE, rule=hasSister(?x, ?y) :- fatherOf(?x, ?z), fatherOf(?y, ?z), gender(?y, 'female').}
]}

,Path{[
 Evidence{literal=gender('pam', 'female'), type=FACT}**
,Evidence{literal=gender('bob', 'male'), type=FACT}**
,Evidence{literal=hasParent('pam', 'bob'), type=FACT}**
,Evidence{literal=fatherOf('pam', 'bob'), type=RULE, rule=fatherOf(?x, ?y) :- hasParent(?x, ?y), gender(?y, 'male').}
,Evidence{literal=gender('bob', 'male'), type=FACT}**
,Evidence{literal=hasParent('tom', 'bob'), type=FACT}**
,Evidence{literal=hasParent('tom', ?y), type=BIND(FACT), variableMap={?y='bob'}}
,Evidence{literal=fatherOf('tom', ?z), type=RULE, rule=fatherOf(?x, ?y) :- hasParent(?x, ?y), gender(?y, 'male').}
,Evidence{literal=hasSister('tom', 'pam'), type=RULE, rule=hasSister(?x, ?y) :- fatherOf(?x, ?z), fatherOf(?y, ?z), gender(?y, 'female').}
]}
]}
